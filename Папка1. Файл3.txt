1.
class Arr_object {
private:
  int *arr;
  int size;
public:
  Arr_object(int *arr, int size) {
    this->arr = arr;
    this->size = size;

  }
  ~Arr_object() {
    delete[] arr;
  }

  void fill_arr() {
    for (int i = 0; i < this->size; i++){
      this->arr[i] = rand() % 50 - 25;
    }
  }

  int find_max_Element() {
    int max = this->arr[0];
    for (int i = 0; i < this->size; i++) {
      if (this->arr[i] > max) {
        max = this->arr[i];
      }
    }
    return max;
  }
  
  

  void print() {
    for (int i = 0; i < this->size; i++) {
      cout << this->arr[i] << "     ";
    }
    cout << endl;
  }

};

int main() {

  int size;
  cout << " Input Size : " ;
  cin >> size;
  int* arr = new int[size];
  
  Arr_object a(arr, size);
  a.fill_arr();
  a.print();
  cout << a.find_max_Element() << endl;
  

  delete[]arr;
------------------------------------------------------------------------------------

2.class Arr_object {
private:
  int *arr;
  int size;
public:
  Arr_object(int *arr, int size) {
    this->arr = arr;
    this->size = size;

  }
  ~Arr_object() {
    delete[] arr;
  }

  void fill_arr() {
    for (int i = 0; i < this->size; i++){
      this->arr[i] = rand() % 50 - 25;
    }
  }

  int find_max_Element() {
    int max = this->arr[0];
    for (int i = 0; i < this->size; i++) {
      if (this->arr[i] > max) {
        max = this->arr[i];
      }
    }
    return max;
  }
  int sum_element_last() {
    int index;
    int sum = 0;
    for (int i = this->size-1; i >= 0; i--) {
      if (this->arr[i] > 0) {
        index = i;
        break;
      }
    }
    for (int i = 0; i < index; i++) {
      sum += arr[i];
    }
    return sum;
  }
  void print() {
    for (int i = 0; i < this->size; i++) {
      cout << this->arr[i] << "     ";
    }
    cout << endl;
  }

};

int main() {

  int size;
  cout << " Input Size : " ;
  cin >> size;
  int* arr = new int[size];
  
  Arr_object a(arr, size);
  a.fill_arr();
  a.print();
  cout << a.find_max_Element() << endl;
  
  cout << a.sum_element_last() << endl;

  delete[]arr;
------------------------------------------------------------------------------------

3.class Arr_object {
private:
  int *arr;
  int size;
public:
  
  Arr_object(int *arr, int size) {
    this->arr = arr;
    this->size = size;

  }
  ~Arr_object() {
    delete[] arr;
  }

  void fill_arr() {
    for (int i = 0; i < this->size; i++){
      this->arr[i] = rand() % 50 - 26;
    }
  }

  int find_max_Element() {
    int max = this->arr[0];
    for (int i = 0; i < this->size; i++) {
      if (this->arr[i] > max) {
        max = this->arr[i];
      }
    }
    return max;
  }
  int sum_element_last() {
    int index;
    int sum = 0;
    for (int i = this->size-1; i >= 0; i--) {
      if (this->arr[i] > 0) {
        index = i;
        break;
      }
    }
    for (int i = 0; i < index; i++) {
      sum += arr[i];
    }
    return sum;
  }

  void create_special_massive() {
    int cont_poss_elements = 0;
    int count_stay_element = 0;
    for (int i = 0; i < this->size; i++){
      if (this->arr[i] > 0) {
        cont_poss_elements++;
      }
      else {
        count_stay_element++;
      }
    }

    int* poss_elements = new int[cont_poss_elements];
    int* stay_arr = new int[count_stay_element];
    int count_p = 0;
    for (int i = 0; i < this->size; i++) {
      if (this->arr[i] > 0) {
        poss_elements[count_p] = this->arr[i];
        count_p++;
      }
      
    }
    int count_s = 0;
    for (int i = 0; i < this->size; i++) {
      if (this->arr[i] <= 0) {
        stay_arr[count_s] = this->arr[i];
        count_s++;
      }
    }

    sort(poss_elements, poss_elements + cont_poss_elements);

    int* main = new int[this->size];

    for (int i = 0; i < cont_poss_elements; i++) {
      main[i] = poss_elements[i];
    }

    int c = 0;
    for (int i = cont_poss_elements-1; i < cont_poss_elements + count_stay_element; i++) {
      main[i] = stay_arr[c];
      c++;
    }

    this->arr = main;
    delete []stay_arr;
    delete []poss_elements;
  }
    
  

  void print() {
    for (int i = 0; i < this->size; i++) {
      cout << this->arr[i] << "     ";
    }
    cout << endl;
  }

};

int main() {
  srand(time(NULL));
  int size;
  cout << " Input Size : " ;
  cin >> size;
  int* arr = new int[size];
  
  Arr_object a(arr, size);
  a.fill_arr();
  a.print();
  cout << a.find_max_Element() << endl;
  cout << a.sum_element_last() << endl;

  a.create_special_massive();
  a.print();

  delete[]arr;
----------------------------------------------------------------------------------------